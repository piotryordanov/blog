<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>react on Piotr Yordanov</title>
    <link>https://blog.piotryordanov.com/tags/react/</link>
    <description>Recent content in react on Piotr Yordanov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 15 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.piotryordanov.com/tags/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using ramda to fill react components</title>
      <link>https://blog.piotryordanov.com/posts/using-ramda-to-fill-react-components/</link>
      <pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.piotryordanov.com/posts/using-ramda-to-fill-react-components/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://ramdajs.com&#34;&gt;Ramda&lt;/a&gt; is swiss toolbox of javascript functional programming.
I have decided to use it in order to greatly simplify the way I am managing data processing.&lt;/p&gt;
&lt;p&gt;As I was building &lt;a href=&#34;https://zeistab.piotryordanov.com&#34;&gt;Zeistab&lt;/a&gt;, I came across two challenges. The first was related to fetching data asynchronisally, while needing to wait for all to be fetched. I discussed it in detail in my post on &lt;a href=&#34;https://blog.piotryordanov.com/posts/Fetching&#34;&gt;Fetching&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And here is another interesting case of ramda
This is a very interesting case of what we are doing to do&lt;/p&gt;
&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
